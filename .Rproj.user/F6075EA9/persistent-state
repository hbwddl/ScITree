build-last-errors="[{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2071,\"column\":12,\"message\":\"variable &#x27;dt_index&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2072,\"column\":12,\"message\":\"variable &#x27;dt_proposed&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2648,\"column\":7,\"message\":\"unused variable &#x27;m&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2649,\"column\":7,\"message\":\"unused variable &#x27;dn&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2897,\"column\":18,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2937,\"column\":10,\"message\":\"unused variable &#x27;p&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2939,\"column\":7,\"message\":\"unused variable &#x27;m&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2940,\"column\":7,\"message\":\"unused variable &#x27;dn&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2982,\"column\":15,\"message\":\"use of bitwise &#x27;|&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2982,\"column\":83,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2982,\"column\":16,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":2982,\"column\":7,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":3052,\"column\":5,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":3954,\"column\":21,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4030,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4031,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4059,\"column\":22,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4045,\"column\":10,\"message\":\"unused variable &#x27;acp_pr&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4048,\"column\":10,\"message\":\"unused variable &#x27;log_lh_modified&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4215,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4222,\"column\":19,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4327,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4328,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4366,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4373,\"column\":19,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4481,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4482,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4509,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4516,\"column\":20,\"message\":\"explicitly assigning value of variable of type &#x27;long double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4575,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4576,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4624,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4631,\"column\":20,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4724,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4725,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4753,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4760,\"column\":19,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4856,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4857,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4881,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4888,\"column\":21,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4977,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":4978,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5007,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5014,\"column\":21,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5097,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5098,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5140,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5147,\"column\":22,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5218,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5228,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5229,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5261,\"column\":16,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5322,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5323,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5346,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5353,\"column\":16,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5410,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5411,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5447,\"column\":18,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5659,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5660,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5686,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5693,\"column\":23,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5878,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5879,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5905,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":5912,\"column\":21,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6100,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6101,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6127,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6134,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6317,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6318,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6346,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6353,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6513,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6514,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6542,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6549,\"column\":23,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6736,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6737,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6764,\"column\":3,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6771,\"column\":23,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6959,\"column\":27,\"message\":\"explicitly assigning value of variable of type &#x27;lh_SQUARE&#x27; to itself [-Wself-assign-overloaded]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":6960,\"column\":24,\"message\":\"explicitly assigning value of variable of type &#x27;double&#x27; to itself [-Wself-assign]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":7660,\"column\":10,\"message\":\"unused variable &#x27;acp_pr&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":7668,\"column\":10,\"message\":\"unused variable &#x27;p_forward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":7669,\"column\":10,\"message\":\"unused variable &#x27;p_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":7690,\"column\":7,\"message\":\"unused variable &#x27;subject_size&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":7691,\"column\":7,\"message\":\"unused variable &#x27;n_subject_secondary&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":7692,\"column\":7,\"message\":\"variable &#x27;source_size&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":7694,\"column\":10,\"message\":\"unused variable &#x27;t_subject_sample&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8259,\"column\":7,\"message\":\"variable &#x27;nbpdiff_current&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8330,\"column\":7,\"message\":\"unused variable &#x27;rank_subject_y&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8402,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_proposed&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8406,\"column\":18,\"message\":\"unused variable &#x27;t_future&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8430,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_total&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8431,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_presamp_subject&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8437,\"column\":7,\"message\":\"variable &#x27;nbpdiff_source_past&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8440,\"column\":10,\"message\":\"unused variable &#x27;binomial_p&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8449,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_past_forward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8450,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_future_forward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8454,\"column\":10,\"message\":\"unused variable &#x27;t_proposed_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8458,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_proposed_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8460,\"column\":10,\"message\":\"unused variable &#x27;t_past_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8460,\"column\":27,\"message\":\"unused variable &#x27;t_future_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8465,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_past_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":8466,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_future_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11702,\"column\":13,\"message\":\"unused variable &#x27;nbpdiff_proposed_rank_x&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11371,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_current&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11448,\"column\":7,\"message\":\"unused variable &#x27;rank_subject_y&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11511,\"column\":10,\"message\":\"variable &#x27;dt&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11530,\"column\":10,\"message\":\"unused variable &#x27;t_sample_subject&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11531,\"column\":10,\"message\":\"unused variable &#x27;t_sample_source&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11532,\"column\":7,\"message\":\"unused variable &#x27;rank_sample_subject&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11533,\"column\":7,\"message\":\"unused variable &#x27;rank_sample_source&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11535,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_source_past&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11536,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_source_future&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11548,\"column\":10,\"message\":\"unused variable &#x27;t_proposed_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11552,\"column\":7,\"message\":\"unused variable &#x27;nbpdiff_proposed_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11554,\"column\":10,\"message\":\"unused variable &#x27;t_past_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":11554,\"column\":27,\"message\":\"unused variable &#x27;t_future_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15600,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_proposed&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15601,\"column\":9,\"message\":\"variable &#x27;nbpdiff_past_forward&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15602,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_future_forward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15604,\"column\":12,\"message\":\"variable &#x27;t_past&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15604,\"column\":20,\"message\":\"unused variable &#x27;t_future&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15609,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_source_y_current_1&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15613,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_source_x_proposed_1&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15619,\"column\":12,\"message\":\"unused variable &#x27;dt_source_x_proposed_1&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15627,\"column\":12,\"message\":\"unused variable &#x27;dt_source_y_current_1&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15639,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_presamp_subject&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15640,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_total&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15642,\"column\":9,\"message\":\"unused variable &#x27;binomial_n_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15643,\"column\":12,\"message\":\"unused variable &#x27;binomial_dt_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15649,\"column\":9,\"message\":\"variable &#x27;nbpdiff_proposed_backward&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15650,\"column\":9,\"message\":\"variable &#x27;nbpdiff_past_backward&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15651,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_future_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15653,\"column\":12,\"message\":\"variable &#x27;t_proposed_backward&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15653,\"column\":33,\"message\":\"variable &#x27;t_past_backward&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":15653,\"column\":50,\"message\":\"unused variable &#x27;t_future_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17211,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_source_y_current_1&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17214,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_source_x_proposed_0&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17215,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_source_x_proposed_1&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17221,\"column\":12,\"message\":\"unused variable &#x27;dt_source_x_proposed_1&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17228,\"column\":12,\"message\":\"variable &#x27;dt_source_y_current_0&#x27; set but not used [-Wunused-but-set-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17229,\"column\":12,\"message\":\"unused variable &#x27;dt_source_y_current_1&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17241,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_presamp_subject&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17242,\"column\":9,\"message\":\"unused variable &#x27;nbpdiff_total&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17244,\"column\":9,\"message\":\"unused variable &#x27;binomial_n_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":17245,\"column\":12,\"message\":\"unused variable &#x27;binomial_dt_backward&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":18251,\"column\":15,\"message\":\"use of bitwise &#x27;|&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":18251,\"column\":64,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":18251,\"column\":16,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":18251,\"column\":7,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":19249,\"column\":19,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":19506,\"column\":14,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":19506,\"column\":7,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":19543,\"column\":5,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":19631,\"column\":11,\"message\":\"unused variable &#x27;rank_source_nbpdiff&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":19830,\"column\":9,\"message\":\"unused variable &#x27;rank_sample&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":20204,\"column\":9,\"message\":\"unused variable &#x27;rank_sample_k&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":21163,\"column\":17,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":21163,\"column\":9,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":21493,\"column\":15,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":21493,\"column\":7,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":22480,\"column\":9,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":22481,\"column\":9,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":22503,\"column\":9,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":23208,\"column\":15,\"message\":\"unused variable &#x27;subject_proposed_2&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":23525,\"column\":22,\"message\":\"equality comparison with extraneous parentheses [-Wparentheses-equality]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":23528,\"column\":22,\"message\":\"equality comparison with extraneous parentheses [-Wparentheses-equality]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":23531,\"column\":22,\"message\":\"equality comparison with extraneous parentheses [-Wparentheses-equality]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":23618,\"column\":19,\"message\":\"equality comparison with extraneous parentheses [-Wparentheses-equality]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":23625,\"column\":19,\"message\":\"equality comparison with extraneous parentheses [-Wparentheses-equality]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":23632,\"column\":19,\"message\":\"equality comparison with extraneous parentheses [-Wparentheses-equality]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":24017,\"column\":9,\"message\":\"use of bitwise &#x27;|&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":24390,\"column\":5,\"message\":\"switch condition has boolean value [-Wswitch-bool]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":24512,\"column\":9,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/Documents/Research/Phylodynamics/ScITree/src/ScITree_src.cpp\",\"line\":24512,\"column\":9,\"message\":\"use of bitwise &#x27;&amp;&#x27; with boolean operands [-Wbitwise-instead-of-logical]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true}]"
build-last-errors-base-dir="~/Documents/Research/Phylodynamics/ScITree/"
build-last-outputs="[{\"type\":0,\"output\":\"==> Rcpp::compileAttributes()\\n\\n\"},{\"type\":1,\"output\":\"* Updated R/RcppExports.R\\n\"},{\"type\":1,\"output\":\"\\n\"},{\"type\":0,\"output\":\"==> R CMD INSTALL --preclean --no-multiarch --with-keep.source ScITree\\n\\n\"},{\"type\":1,\"output\":\"* installing to library ‘/Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/_build’\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"* installing *source* package ‘ScITree’ ...\\n\"},{\"type\":1,\"output\":\"** this is package ‘ScITree’ version ‘1.1.0’\\n\"},{\"type\":1,\"output\":\"** using staged installation\\n\"},{\"type\":1,\"output\":\"** libs\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"/opt/homebrew/bin/ccache g++ -std=gnu++14 -I\\\"/Library/Frameworks/R.framework/Resources/include\\\" -DNDEBUG  -I'/Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/Rcpp/include' -I'/Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/BH/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2   -c RcppExports.cpp -o RcppExports.o\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"using C++ compiler: ‘Apple clang version 17.0.0 (clang-1700.0.13.3)’\\n\"},{\"type\":1,\"output\":\"using C++14\\n\"},{\"type\":1,\"output\":\"using SDK: ‘’\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"/opt/homebrew/bin/ccache g++ -std=gnu++14 -I\\\"/Library/Frameworks/R.framework/Resources/include\\\" -DNDEBUG  -I'/Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/Rcpp/include' -I'/Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/BH/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2   -c ScITree_src.cpp -o ScITree_src.o\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2071:12: warning: variable 'dt_index' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 2071 |     double dt_index;\\n\"},{\"type\":1,\"output\":\"      |            ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2072:12: warning: variable 'dt_proposed' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 2072 |     double dt_proposed;\\n\"},{\"type\":1,\"output\":\"      |            ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2648:7: warning: unused variable 'm' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 2648 |   int m=0; // number of sites from nt_past were different from the corresponding sites from nt_future\\n\"},{\"type\":1,\"output\":\"      |       ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2649:7: warning: unused variable 'dn' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 2649 |   int dn=0; // number of sites from nt_past become the same as the coresponding sites from nt_future among m\\n\"},{\"type\":1,\"output\":\"      |       ^~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2897:18: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 2897 |     switch((int)((nt_past_backward.at(i)==seq_proposed_backward.at(i)) & (seq_proposed_backward.at(i)==nt_future_backward.at(i)))){\\n\"},{\"type\":1,\"output\":\"      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"      |                                                                        &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2897:18: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2937:10: warning: unused variable 'p' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 2937 |   double p = dt/T;\\n\"},{\"type\":1,\"output\":\"      |          ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2939:7: warning: unused variable 'm' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 2939 |   int m=0; // number of sites from nt_past were different from the corresponding sites from nt_future\\n\"},{\"type\":1,\"output\":\"      |       ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2940:7: warning: unused variable 'dn' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 2940 |   int dn=0; // number of sites from nt_past become the same as the corresponding sites from nt_future among m\\n\"},{\"type\":1,\"output\":\"      |       ^~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2982:15: warning: use of bitwise '|' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 2982 |       switch( ((nt_past_backward.at(i)==2) & (seq_proposed_backward.at(i)==3)) | ((nt_past_backward.at(i)==3) & (seq_proposed_backward.at(i)==2)) ){\\n\"},{\"type\":1,\"output\":\"      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"      |                                                                                ||\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2982:15: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2982:83: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 2982 |       switch( ((nt_past_backward.at(i)==2) & (seq_proposed_backward.at(i)==3)) | ((nt_past_backward.at(i)==3) & (seq_proposed_backward.at(i)==2)) ){\\n\"},{\"type\":1,\"output\":\"      |                                                                                  ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"      |                                                                                                               &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2982:83: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2982:16: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 2982 |       switch( ((nt_past_backward.at(i)==2) & (seq_proposed_backward.at(i)==3)) | ((nt_past_backward.at(i)==3) & (seq_proposed_backward.at(i)==2)) ){\\n\"},{\"type\":1,\"output\":\"      |               ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"      |                                            &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2982:16: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:2982:7: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 2982 |       switch( ((nt_past_backward.at(i)==2) & (seq_proposed_backward.at(i)==3)) | ((nt_past_backward.at(i)==3) & (seq_proposed_backward.at(i)==2)) ){\\n\"},{\"type\":1,\"output\":\"      |       ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:3052:5: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 3052 |     switch( ((base_1==2) & (base_2==3)) | ((base_1==3) & (base_2==2)) ){\\n\"},{\"type\":1,\"output\":\"      |     ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:3954:21: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 3954 |     lambda_proposed = lambda_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4030:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 4030 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4031:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4031 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4059:22: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4059 |     zeta_bg_proposed = zeta_bg_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4045:10: warning: unused variable 'acp_pr' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 4045 |   double acp_pr = 0.0;\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4048:10: warning: unused variable 'log_lh_modified' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 4048 |   double log_lh_modified =  log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4215:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 4215 |   switch( (mu_1_proposed<=0) | (mu_1_proposed>= para_priors_arg.mu_1_hi) ){\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4222:19: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4222 |     mu_1_proposed = mu_1_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4327:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 4327 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4328:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4328 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4366:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 4366 |   switch( (mu_2_proposed<=0) | (mu_2_proposed>=para_priors_arg.mu_2_hi) ){\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4373:19: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4373 |     mu_2_proposed = mu_2_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4481:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 4481 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4482:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4482 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4509:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 4509 |   switch( (p_ber_proposed<=0) | (p_ber_proposed>= para_priors_arg.p_ber_hi) ){\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4516:20: warning: explicitly assigning value of variable of type 'long double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4516 |     p_ber_proposed = p_ber_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4575:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 4575 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4576:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4576 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4624:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 4624 |   switch ( (alpha_proposed<=0) | (alpha_proposed>= para_priors_arg.alpha_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4631:20: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4631 |     alpha_proposed = alpha_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4724:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 4724 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4725:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4725 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4753:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 4753 |   switch ((beta_proposed<=0) | (beta_proposed>= para_priors_arg.beta_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4760:19: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4760 |     beta_proposed = beta_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4856:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 4856 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4857:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4857 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4881:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 4881 |   switch ((beta_m_proposed <= 0) | (beta_m_proposed >= para_priors_arg.beta_m_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4888:21: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4888 |     beta_m_proposed = beta_m_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4977:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 4977 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:4978:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 4978 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5007:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 5007 |   switch ((lat_mu_proposed<=0) | (lat_mu_proposed>= para_priors_arg.lat_mu_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5014:21: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5014 |     lat_mu_proposed = lat_mu_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5097:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 5097 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5098:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5098 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5140:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 5140 |   switch ((lat_var_proposed<= para_priors_arg.lat_var_lo) | (lat_var_proposed>= para_priors_arg.lat_var_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5147:22: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5147 |     lat_var_proposed = lat_var_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5218:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 5218 |   switch((uniform_rv<=acp_pr) & (std::isnan(log_lh_modified)==0)){\\n\"},{\"type\":1,\"output\":\"      |   ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5228:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 5228 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5229:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5229 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5261:16: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5261 |     c_proposed = c_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~ ^ ~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5322:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 5322 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5323:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5323 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5346:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 5346 |   switch ((d_proposed <= 0) | (d_proposed >= para_priors_arg.d_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5353:16: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5353 |     d_proposed = d_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~ ^ ~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5410:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 5410 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5411:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5411 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5447:18: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5447 |     k_1_proposed = k_1_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5659:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 5659 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5660:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5660 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5686:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 5686 |   switch ((tau_susc_proposed <= para_priors_arg.tau_susc_lo) | (tau_susc_proposed >= para_priors_arg.tau_susc_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5693:23: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5693 |     tau_susc_proposed = tau_susc_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5878:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 5878 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5879:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5879 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5905:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 5905 |   switch ((nu_inf_proposed <= para_priors_arg.nu_inf_lo) | (nu_inf_proposed >= para_priors_arg.nu_inf_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:5912:21: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 5912 |     nu_inf_proposed = nu_inf_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6100:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 6100 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6101:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 6101 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6127:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 6127 |   switch ((rho_susc1_proposed <= 0) | (rho_susc1_proposed >= para_priors_arg.rho_susc1_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6134:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 6134 |     rho_susc1_proposed = rho_susc1_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6317:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 6317 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6318:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 6318 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6346:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 6346 |   switch ((rho_susc2_proposed <= 0) | (rho_susc2_proposed >= para_priors_arg.rho_susc2_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6353:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 6353 |     rho_susc2_proposed = rho_susc2_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6513:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 6513 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6514:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 6514 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6542:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 6542 |   switch ((phi_inf1_proposed <= 0) | (phi_inf1_proposed >= para_priors_arg.phi_inf1_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6549:23: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 6549 |     phi_inf1_proposed = phi_inf1_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6736:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 6736 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6737:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 6737 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6764:3: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 6764 |   switch ((phi_inf2_proposed <= 0) | (phi_inf2_proposed >= para_priors_arg.phi_inf2_hi)) {\\n\"},{\"type\":1,\"output\":\"      |   ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6771:23: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 6771 |     phi_inf2_proposed = phi_inf2_proposed;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6959:27: warning: explicitly assigning value of variable of type 'lh_SQUARE' to itself [-Wself-assign-overloaded]\\n\"},{\"type\":1,\"output\":\" 6959 |     lh_square_current_arg = lh_square_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:6960:24: warning: explicitly assigning value of variable of type 'double' to itself [-Wself-assign]\\n\"},{\"type\":1,\"output\":\" 6960 |     log_lh_current_arg = log_lh_current_arg;\\n\"},{\"type\":1,\"output\":\"      |     ~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:7660:10: warning: unused variable 'acp_pr' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 7660 |   double acp_pr = 0.0;\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:7668:10: warning: unused variable 'p_forward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 7668 |   double p_forward = 0.0;\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:7669:10: warning: unused variable 'p_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 7669 |   double p_backward = 0.0;\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:7690:7: warning: unused variable 'subject_size' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 7690 |   int subject_size = current_size_arg.at(subject_proposed); // Number of sequences in subject\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:7691:7: warning: unused variable 'n_subject_secondary' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 7691 |   int n_subject_secondary = infecting_list_current_arg.at(subject_proposed).size(); // Number of secondary infections from subject\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:7692:7: warning: variable 'source_size' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 7692 |   int source_size = -1; // Number of sequences in source\\n\"},{\"type\":1,\"output\":\"      |       ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:7694:10: warning: unused variable 't_subject_sample' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 7694 |   double t_subject_sample = t_sample_arg.at(subject_proposed);\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8259:7: warning: variable 'nbpdiff_current' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 8259 |   int nbpdiff_current; // original base pair difference\\n\"},{\"type\":1,\"output\":\"      |       ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8330:7: warning: unused variable 'rank_subject_y' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8330 |   int rank_subject_y = 0;\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8402:7: warning: unused variable 'nbpdiff_proposed' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8402 |   int nbpdiff_proposed = -1;\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8406:18: warning: unused variable 't_future' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8406 |   double t_past, t_future;\\n\"},{\"type\":1,\"output\":\"      |                  ^~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8430:7: warning: unused variable 'nbpdiff_total' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8430 |   int nbpdiff_total = -1;\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8431:7: warning: unused variable 'nbpdiff_presamp_subject' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8431 |   int nbpdiff_presamp_subject = -1;\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8437:7: warning: variable 'nbpdiff_source_past' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 8437 |   int nbpdiff_source_past = 100;\\n\"},{\"type\":1,\"output\":\"      |       ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8440:10: warning: unused variable 'binomial_p' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8440 |   double binomial_p = -1;\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8449:7: warning: unused variable 'nbpdiff_past_forward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8449 |   int nbpdiff_past_forward; // the nbpdiff at the nearest past (in the direction of time change) compared to the time of the proposed sequence; this might be or might not be the original nbpdiff which gotta be replaced\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8450:7: warning: unused variable 'nbpdiff_future_forward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8450 |   int nbpdiff_future_forward; // the nbpdiff at the nearest future(in the direction of time change) compared to the time of the proposed sequence\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8454:10: warning: unused variable 't_proposed_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8454 |   double t_proposed_backward;\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8458:7: warning: unused variable 'nbpdiff_proposed_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8458 |   int nbpdiff_proposed_backward;\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8460:10: warning: unused variable 't_past_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8460 |   double t_past_backward, t_future_backward;\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8460:27: warning: unused variable 't_future_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8460 |   double t_past_backward, t_future_backward;\\n\"},{\"type\":1,\"output\":\"      |                           ^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8465:7: warning: unused variable 'nbpdiff_past_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8465 |   int nbpdiff_past_backward;\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:8466:7: warning: unused variable 'nbpdiff_future_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 8466 |   int nbpdiff_future_backward;\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11702:13: warning: unused variable 'nbpdiff_proposed_rank_x' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11702 |         int nbpdiff_proposed_rank_x = nbpdiff_current_arg[subject_source][rank_source_x] + nbpdiff_current_arg[subject_source][(rank_source_x+1)];\\n\"},{\"type\":1,\"output\":\"       |             ^~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11371:7: warning: unused variable 'nbpdiff_current' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11371 |   int nbpdiff_current; // original base pair difference\\n\"},{\"type\":1,\"output\":\"       |       ^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11448:7: warning: unused variable 'rank_subject_y' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11448 |   int rank_subject_y = 0;\\n\"},{\"type\":1,\"output\":\"       |       ^~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11511:10: warning: variable 'dt' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 11511 |   double dt;\\n\"},{\"type\":1,\"output\":\"       |          ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11530:10: warning: unused variable 't_sample_subject' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11530 |   double t_sample_subject = -1;\\n\"},{\"type\":1,\"output\":\"       |          ^~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11531:10: warning: unused variable 't_sample_source' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11531 |   double t_sample_source = -1;\\n\"},{\"type\":1,\"output\":\"       |          ^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11532:7: warning: unused variable 'rank_sample_subject' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11532 |   int rank_sample_subject = -1;\\n\"},{\"type\":1,\"output\":\"       |       ^~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11533:7: warning: unused variable 'rank_sample_source' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11533 |   int rank_sample_source = -1;\\n\"},{\"type\":1,\"output\":\"       |       ^~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11535:7: warning: unused variable 'nbpdiff_source_past' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11535 |   int nbpdiff_source_past = -7;\\n\"},{\"type\":1,\"output\":\"       |       ^~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11536:7: warning: unused variable 'nbpdiff_source_future' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11536 |   int nbpdiff_source_future = -8;\\n\"},{\"type\":1,\"output\":\"       |       ^~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11548:10: warning: unused variable 't_proposed_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11548 |   double t_proposed_backward;\\n\"},{\"type\":1,\"output\":\"       |          ^~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11552:7: warning: unused variable 'nbpdiff_proposed_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11552 |   int nbpdiff_proposed_backward;\\n\"},{\"type\":1,\"output\":\"       |       ^~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11554:10: warning: unused variable 't_past_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11554 |   double t_past_backward, t_future_backward;\\n\"},{\"type\":1,\"output\":\"       |          ^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:11554:27: warning: unused variable 't_future_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 11554 |   double t_past_backward, t_future_backward;\\n\"},{\"type\":1,\"output\":\"       |                           ^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15600:9: warning: unused variable 'nbpdiff_proposed' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15600 |     int nbpdiff_proposed; // newly proposed nbpdiff when source changes\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15601:9: warning: variable 'nbpdiff_past_forward' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 15601 |     int nbpdiff_past_forward;\\n\"},{\"type\":1,\"output\":\"       |         ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15602:9: warning: unused variable 'nbpdiff_future_forward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15602 |     int nbpdiff_future_forward;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15604:12: warning: variable 't_past' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 15604 |     double t_past, t_future;\\n\"},{\"type\":1,\"output\":\"       |            ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15604:20: warning: unused variable 't_future' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15604 |     double t_past, t_future;\\n\"},{\"type\":1,\"output\":\"       |                    ^~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15609:9: warning: unused variable 'nbpdiff_source_y_current_1' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15609 |     int nbpdiff_source_y_current_1 = -16;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15613:9: warning: unused variable 'nbpdiff_source_x_proposed_1' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15613 |     int nbpdiff_source_x_proposed_1 = -128;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15619:12: warning: unused variable 'dt_source_x_proposed_1' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15619 |     double dt_source_x_proposed_1 = 0;\\n\"},{\"type\":1,\"output\":\"       |            ^~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15627:12: warning: unused variable 'dt_source_y_current_1' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15627 |     double dt_source_y_current_1 = 0;\\n\"},{\"type\":1,\"output\":\"       |            ^~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15639:9: warning: unused variable 'nbpdiff_presamp_subject' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15639 |     int nbpdiff_presamp_subject = -31;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15640:9: warning: unused variable 'nbpdiff_total' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15640 |     int nbpdiff_total = -32;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15642:9: warning: unused variable 'binomial_n_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15642 |     int binomial_n_backward = -33;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15643:12: warning: unused variable 'binomial_dt_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15643 |     double binomial_dt_backward = -34;\\n\"},{\"type\":1,\"output\":\"       |            ^~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15649:9: warning: variable 'nbpdiff_proposed_backward' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 15649 |     int nbpdiff_proposed_backward;\\n\"},{\"type\":1,\"output\":\"       |         ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15650:9: warning: variable 'nbpdiff_past_backward' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 15650 |     int nbpdiff_past_backward;\\n\"},{\"type\":1,\"output\":\"       |         ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15651:9: warning: unused variable 'nbpdiff_future_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15651 |     int nbpdiff_future_backward;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15653:12: warning: variable 't_proposed_backward' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 15653 |     double t_proposed_backward, t_past_backward, t_future_backward;\\n\"},{\"type\":1,\"output\":\"       |            ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15653:33: warning: variable 't_past_backward' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 15653 |     double t_proposed_backward, t_past_backward, t_future_backward;\\n\"},{\"type\":1,\"output\":\"       |                                 ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:15653:50: warning: unused variable 't_future_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 15653 |     double t_proposed_backward, t_past_backward, t_future_backward;\\n\"},{\"type\":1,\"output\":\"       |                                                  ^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17211:9: warning: unused variable 'nbpdiff_source_y_current_1' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 17211 |     int nbpdiff_source_y_current_1 = -16;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17214:9: warning: unused variable 'nbpdiff_source_x_proposed_0' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 17214 |     int nbpdiff_source_x_proposed_0 = -64;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17215:9: warning: unused variable 'nbpdiff_source_x_proposed_1' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 17215 |     int nbpdiff_source_x_proposed_1 = -128;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17221:12: warning: unused variable 'dt_source_x_proposed_1' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 17221 |     double dt_source_x_proposed_1 = 0;\\n\"},{\"type\":1,\"output\":\"       |            ^~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17228:12: warning: variable 'dt_source_y_current_0' set but not used [-Wunused-but-set-variable]\\n\"},{\"type\":1,\"output\":\" 17228 |     double dt_source_y_current_0 = 0;\\n\"},{\"type\":1,\"output\":\"       |            ^\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17229:12: warning: unused variable 'dt_source_y_current_1' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 17229 |     double dt_source_y_current_1 = 0;\\n\"},{\"type\":1,\"output\":\"       |            ^~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17241:9: warning: unused variable 'nbpdiff_presamp_subject' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 17241 |     int nbpdiff_presamp_subject = -31;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17242:9: warning: unused variable 'nbpdiff_total' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 17242 |     int nbpdiff_total = -32;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17244:9: warning: unused variable 'binomial_n_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 17244 |     int binomial_n_backward = -33;\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:17245:12: warning: unused variable 'binomial_dt_backward' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 17245 |     double binomial_dt_backward = -34;\\n\"},{\"type\":1,\"output\":\"       |            ^~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:18251:15: warning: use of bitwise '|' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 18251 |       switch( ((seq_1_arg.at(i)==2) & (seq_2_arg.at(i)==3)) | ((seq_1_arg.at(i)==3) & (seq_2_arg.at(i)==2)) ){\\n\"},{\"type\":1,\"output\":\"       |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                             ||\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:18251:15: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:18251:64: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 18251 |       switch( ((seq_1_arg.at(i)==2) & (seq_2_arg.at(i)==3)) | ((seq_1_arg.at(i)==3) & (seq_2_arg.at(i)==2)) ){\\n\"},{\"type\":1,\"output\":\"       |                                                               ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                                                     &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:18251:64: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:18251:16: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 18251 |       switch( ((seq_1_arg.at(i)==2) & (seq_2_arg.at(i)==3)) | ((seq_1_arg.at(i)==3) & (seq_2_arg.at(i)==2)) ){\\n\"},{\"type\":1,\"output\":\"       |               ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                     &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:18251:16: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:18251:7: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 18251 |       switch( ((seq_1_arg.at(i)==2) & (seq_2_arg.at(i)==3)) | ((seq_1_arg.at(i)==3) & (seq_2_arg.at(i)==2)) ){\\n\"},{\"type\":1,\"output\":\"       |       ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:19249:19: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 19249 |       switch( int((t_i_current.at(xi_I_current.at(j))<t_bound) & (t_i_current.at(xi_I_current.at(j))>=(t_bound-para_priors_etc.t_bound_hi))) ){ // when propose t_e after deciding source_pool; 2nd condition only allows a subset of xi_I to be possible sources (avoid f_EnI=0)\\n\"},{\"type\":1,\"output\":\"       |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                                &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:19249:19: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:19506:14: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 19506 |       switch((nt_data_current.t_sample.at(source)<= t_e_current.at(subject)) & (ind_sample.at(source)==0)){\\n\"},{\"type\":1,\"output\":\"       |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                                              &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:19506:14: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:19506:7: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 19506 |       switch((nt_data_current.t_sample.at(source)<= t_e_current.at(subject)) & (ind_sample.at(source)==0)){\\n\"},{\"type\":1,\"output\":\"       |       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:19543:5: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 19543 |     switch((nt_data_current.t_sample.at(subject)!=para_other.unassigned_time) &(ind_sample.at(subject)==0)){\\n\"},{\"type\":1,\"output\":\"       |     ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:19631:11: warning: unused variable 'rank_source_nbpdiff' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 19631 |       int rank_source_nbpdiff = (int)(distance(nt_data_current.t_nt.at(source_i).begin(), find(nt_data_current.t_nt.at(source_i).begin(), nt_data_current.t_nt.at(source_i).end(), te_i)));\\n\"},{\"type\":1,\"output\":\"       |           ^~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:19830:9: warning: unused variable 'rank_sample' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 19830 |     int rank_sample = (int)(distance(nt_data_arg.t_nt.at(k_arg).begin(), find(nt_data_arg.t_nt.at(k_arg).begin(), nt_data_arg.t_nt.at(k_arg).end(), t_now_arg)));\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:20204:9: warning: unused variable 'rank_sample_k' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 20204 |     int rank_sample_k = (int)(distance(nt_data_arg.t_nt.at(k_arg).begin(), find(nt_data_arg.t_nt.at(k_arg).begin(), nt_data_arg.t_nt.at(k_arg).end(), t_sample_k)));\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:21163:17: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 21163 |         switch ((nt_data_arg.t_sample.at(k_source) > nt_data_arg.t_last.at(k_source)) & (nt_data_arg.t_sample.at(k_source) < t_now_arg)) {\\n\"},{\"type\":1,\"output\":\"       |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                                                       &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:21163:17: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:21163:9: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 21163 |         switch ((nt_data_arg.t_sample.at(k_source) > nt_data_arg.t_last.at(k_source)) & (nt_data_arg.t_sample.at(k_source) < t_now_arg)) {\\n\"},{\"type\":1,\"output\":\"       |         ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:21493:15: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 21493 |       switch ((nt_data_arg.t_sample.at(ind_now_arg.at(i)) > nt_data_arg.t_last.at(ind_now_arg.at(i))) & (nt_data_arg.t_sample.at(ind_now_arg.at(i)) < t_now_arg)) {\\n\"},{\"type\":1,\"output\":\"       |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                                                                       &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:21493:15: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:21493:7: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 21493 |       switch ((nt_data_arg.t_sample.at(ind_now_arg.at(i)) > nt_data_arg.t_last.at(ind_now_arg.at(i))) & (nt_data_arg.t_sample.at(ind_now_arg.at(i)) < t_now_arg)) {\\n\"},{\"type\":1,\"output\":\"       |       ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:22480:9: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 22480 |     if ((epi_final.t_i.at(i) != para_other.unassigned_time) & (epi_final.t_i.at(i) < epi_final.t_r.at(i))) xi_I.push_back(i); // the seocnd condition handles the situation that i=for a few cases t_r<t_i (ignore their contibution of t_i and t_r)\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                             &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:22480:9: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:22481:9: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 22481 |     if ((epi_final.t_r.at(i) != para_other.unassigned_time) & (epi_final.t_i.at(i) < epi_final.t_r.at(i))) xi_R.push_back(i); // the seocnd condition handles the situation that i=for a few cases t_r<t_i (ignore their contibution of t_i and t_r)\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                             &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:22481:9: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:22503:9: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 22503 |     if ((epi_final.infected_source.at(i) != 9999) & (epi_final.infected_source.at(i) != -99)) xi_beta_E.push_back(i);\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                   &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:22503:9: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23208:15: warning: unused variable 'subject_proposed_2' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\" 23208 |           int subject_proposed_2 = xi_E_current.at(runif_int(0, (int)(xi_E_current.size()) - 1, rng));\\n\"},{\"type\":1,\"output\":\"       |               ^~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23525:22: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]\\n\"},{\"type\":1,\"output\":\" 23525 |         if ((opt_mov == 0)) {\\n\"},{\"type\":1,\"output\":\"       |              ~~~~~~~~^~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23525:22: note: remove extraneous parentheses around the comparison to silence this warning\\n\"},{\"type\":1,\"output\":\" 23525 |         if ((opt_mov == 0)) {\\n\"},{\"type\":1,\"output\":\"       |             ~        ^   ~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23525:22: note: use '=' to turn this equality comparison into an assignment\\n\"},{\"type\":1,\"output\":\" 23525 |         if ((opt_mov == 0)) {\\n\"},{\"type\":1,\"output\":\"       |                      ^~\\n\"},{\"type\":1,\"output\":\"       |                      =\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23528:22: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]\\n\"},{\"type\":1,\"output\":\" 23528 |         if ((opt_mov == 1)) {\\n\"},{\"type\":1,\"output\":\"       |              ~~~~~~~~^~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23528:22: note: remove extraneous parentheses around the comparison to silence this warning\\n\"},{\"type\":1,\"output\":\" 23528 |         if ((opt_mov == 1)) {\\n\"},{\"type\":1,\"output\":\"       |             ~        ^   ~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23528:22: note: use '=' to turn this equality comparison into an assignment\\n\"},{\"type\":1,\"output\":\" 23528 |         if ((opt_mov == 1)) {\\n\"},{\"type\":1,\"output\":\"       |                      ^~\\n\"},{\"type\":1,\"output\":\"       |                      =\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23531:22: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]\\n\"},{\"type\":1,\"output\":\" 23531 |         if ((opt_mov == 2)) {\\n\"},{\"type\":1,\"output\":\"       |              ~~~~~~~~^~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23531:22: note: remove extraneous parentheses around the comparison to silence this warning\\n\"},{\"type\":1,\"output\":\" 23531 |         if ((opt_mov == 2)) {\\n\"},{\"type\":1,\"output\":\"       |             ~        ^   ~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23531:22: note: use '=' to turn this equality comparison into an assignment\\n\"},{\"type\":1,\"output\":\" 23531 |         if ((opt_mov == 2)) {\\n\"},{\"type\":1,\"output\":\"       |                      ^~\\n\"},{\"type\":1,\"output\":\"       |                      =\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23618:19: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]\\n\"},{\"type\":1,\"output\":\" 23618 |           if ((js == (int)(nt_data_current.nbp_diff[is].size() - 1))) myfile6_index << is << endl;\\n\"},{\"type\":1,\"output\":\"       |                ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23618:19: note: remove extraneous parentheses around the comparison to silence this warning\\n\"},{\"type\":1,\"output\":\" 23618 |           if ((js == (int)(nt_data_current.nbp_diff[is].size() - 1))) myfile6_index << is << endl;\\n\"},{\"type\":1,\"output\":\"       |               ~   ^                                                ~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23618:19: note: use '=' to turn this equality comparison into an assignment\\n\"},{\"type\":1,\"output\":\" 23618 |           if ((js == (int)(nt_data_current.nbp_diff[is].size() - 1))) myfile6_index << is << endl;\\n\"},{\"type\":1,\"output\":\"       |                   ^~\\n\"},{\"type\":1,\"output\":\"       |                   =\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23625:19: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]\\n\"},{\"type\":1,\"output\":\" 23625 |           if ((js == (int)(nt_data_current.nbp_diff[is].size() - 1))) myfile6_out << nt_data_current.nbp_diff[is][js] << \\\" \\\" << endl;\\n\"},{\"type\":1,\"output\":\"       |                ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23625:19: note: remove extraneous parentheses around the comparison to silence this warning\\n\"},{\"type\":1,\"output\":\" 23625 |           if ((js == (int)(nt_data_current.nbp_diff[is].size() - 1))) myfile6_out << nt_data_current.nbp_diff[is][js] << \\\" \\\" << endl;\\n\"},{\"type\":1,\"output\":\"       |               ~   ^                                                ~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23625:19: note: use '=' to turn this equality comparison into an assignment\\n\"},{\"type\":1,\"output\":\" 23625 |           if ((js == (int)(nt_data_current.nbp_diff[is].size() - 1))) myfile6_out << nt_data_current.nbp_diff[is][js] << \\\" \\\" << endl;\\n\"},{\"type\":1,\"output\":\"       |                   ^~\\n\"},{\"type\":1,\"output\":\"       |                   =\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23632:19: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]\\n\"},{\"type\":1,\"output\":\" 23632 |           if ((js == (int)(nt_data_current.t_nt[is].size() - 1))) myfile7_out << nt_data_current.t_nt[is][js] << \\\" \\\" << endl;\\n\"},{\"type\":1,\"output\":\"       |                ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23632:19: note: remove extraneous parentheses around the comparison to silence this warning\\n\"},{\"type\":1,\"output\":\" 23632 |           if ((js == (int)(nt_data_current.t_nt[is].size() - 1))) myfile7_out << nt_data_current.t_nt[is][js] << \\\" \\\" << endl;\\n\"},{\"type\":1,\"output\":\"       |               ~   ^                                            ~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:23632:19: note: use '=' to turn this equality comparison into an assignment\\n\"},{\"type\":1,\"output\":\" 23632 |           if ((js == (int)(nt_data_current.t_nt[is].size() - 1))) myfile7_out << nt_data_current.t_nt[is][js] << \\\" \\\" << endl;\\n\"},{\"type\":1,\"output\":\"       |                   ^~\\n\"},{\"type\":1,\"output\":\"       |                   =\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:24017:9: warning: use of bitwise '|' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 24017 |     if ((epi_data.status.at(i) == 2) | (epi_data.status.at(i) == 3)) {\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                      ||\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:24017:9: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:24390:5: warning: switch condition has boolean value [-Wswitch-bool]\\n\"},{\"type\":1,\"output\":\" 24390 |     switch ((t_now == para_other.unassigned_time) | (t_now >= para_other.t_max)) {\\n\"},{\"type\":1,\"output\":\"       |     ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:24512:9: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 24512 |     if ((nt_data.ind_sample.at(i) == 0) & (epi_data.t_e.at(i) != para_other.unassigned_time) & (epi_data.t_r.at(i) == para_other.unassigned_time)) {\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                                                                              &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:24512:9: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:24512:9: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\\n\"},{\"type\":1,\"output\":\" 24512 |     if ((nt_data.ind_sample.at(i) == 0) & (epi_data.t_e.at(i) != para_other.unassigned_time) & (epi_data.t_r.at(i) == para_other.unassigned_time)) {\\n\"},{\"type\":1,\"output\":\"       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"       |                                         &&\\n\"},{\"type\":1,\"output\":\"ScITree_src.cpp:24512:9: note: cast one or both operands to int to silence this warning\\n\"},{\"type\":1,\"output\":\"181 warnings generated.\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"/opt/homebrew/bin/ccache g++ -std=gnu++14 -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -L/Library/Frameworks/R.framework/Resources/lib -L/opt/R/arm64/lib -o ScITree.so RcppExports.o ScITree_src.o -F/Library/Frameworks/R.framework/.. -framework R\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"installing to /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/_build/00LOCK-ScITree/00new/ScITree/libs\\n\"},{\"type\":1,\"output\":\"** R\\n\"},{\"type\":1,\"output\":\"** data\\n\"},{\"type\":1,\"output\":\"*** moving datasets to lazyload DB\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** byte-compile and prepare package for lazy loading\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** help\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"*** installing help indices\\n\"},{\"type\":1,\"output\":\"** building package indices\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from temporary location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** checking absolute paths in shared objects and dynamic libraries\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from final location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package keeps a record of temporary installation path\\n\"},{\"type\":1,\"output\":\"* DONE (ScITree)\\n\"},{\"type\":1,\"output\":\"\"}]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"ignoreCase\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOn\":[],\"matchOff\":[],\"replaceMatchOn\":[],\"replaceMatchOff\":[]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":false,\"replacePattern\":\"\"}"
imageDirtyState="0"
saveActionState="0"
